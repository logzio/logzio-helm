{{ if .Values.enabled }}
apiVersion: {{ .Values.apiVersions.daemonset }}
kind: DaemonSet
metadata:
  name: {{ include "fluentd.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    k8s-app: {{ .Values.k8sApp }}
    version: v1
spec:
  selector:
    matchLabels:
      k8s-app: {{ .Values.k8sApp }}
  template:
    metadata:
      labels:
        k8s-app: {{ .Values.k8sApp }}
        version: v1
{{- if .Values.daemonset.fluentdPrometheusConf }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "24231"
{{- end}}
    spec:
      {{- if .Values.daemonset.priorityClassName }}
      priorityClassName: {{ .Values.daemonset.priorityClassName }}
      {{- end }}
      {{- if .Values.isRBAC }}
      serviceAccount: {{ template "fluentd.serviceAccount" . }}
      serviceAccountName: {{ template "fluentd.serviceAccount" . }}
      {{- end }}
      {{- if .Values.daemonset.affinity }}
      affinity:
{{ toYaml .Values.daemonset.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.daemonset.tolerations }}
      tolerations:
{{ toYaml .Values.daemonset.tolerations | indent 6 }}
      {{- end }}
      {{- if .Values.daemonset.podSecurityContext }}
      securityContext: {{ toYaml .Values.daemonset.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- with .Values.daemonset.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      # Because the image's entrypoint requires to write on /fluentd/etc but we mount configmap there which is read-only,
      # this initContainers workaround or other is needed.
      # See https://github.com/fluent/fluentd-kubernetes-daemonset/issues/90
      initContainers:
        - name: copy-fluentd-config
          image: {{ .Values.daemonset.init.containerImage }}
          command: ['sh', '-c', 'cp /config-volume/..data/* /fluentd/etc']
{{- if .Values.daemonset.initContainerSecurityContext }}
          securityContext: {{ toYaml .Values.daemonset.initContainerSecurityContext | nindent 12 }}
{{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /config-volume
            - name: fluentdconf
              mountPath: /fluentd/etc
            {{- if .Values.daemonset.init.extraVolumeMounts }}
{{ toYaml .Values.daemonset.init.extraVolumeMounts | indent 12 }}
            {{- end }}
      containers:
      - name: fluentd
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
{{- if .Values.isPrivileged }}
        securityContext:
          privileged: true
{{- else }}
{{- if .Values.daemonset.securityContext }}
        securityContext: {{ toYaml .Values.daemonset.securityContext | nindent 10 }}
{{- end }}
{{- end}}
{{- if .Values.daemonset.fluentdPrometheusConf }}
        ports:
        - name: metrics
          containerPort: 24231
          protocol: TCP
{{- end}}
        env:
        - name: LOGZIO_LOG_SHIPPING_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretName }}
              key: logzio-log-shipping-token
        - name: LOGZIO_LOG_LISTENER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretName }}
              key: logzio-log-listener
        - name: LOG_FILE_REFRESH_INTERVAL
          value: {{ .Values.daemonset.LogFileRefreshInterval | quote }}
        - name: LOGZIO_BUFFER_TYPE
          value: {{ .Values.daemonset.logzioBufferType | quote }}
        - name: LOGZIO_BUFFER_PATH
          value: {{ .Values.daemonset.logzioBufferPath | quote }}
        - name: LOGZIO_OVERFLOW_ACTION
          value: {{ .Values.daemonset.logzioOverflowAction | quote }}
        - name: LOGZIO_CHUNK_LIMIT_SIZE
          value: {{ .Values.daemonset.logzioChunkLimitSize | quote }}
        - name: LOGZIO_QUEUE_LIMIT_LENGTH
          value: {{ .Values.daemonset.logzioQueueLimitLength | quote }}
        - name: LOGZIO_FLUSH_INTERVAL
          value: {{ .Values.daemonset.logzioFlushInterval | quote }}
        - name: LOGZIO_RETRY_MAX_INTERVAL
          value: {{ .Values.daemonset.logzioRetryMaxInterval | quote }}
        - name: LOGZIO_RETRY_FOREVER
          value: {{ .Values.daemonset.logzioRetryForever | quote }}
        - name: LOGZIO_FLUSH_THREAD_COUNT
          value: {{ .Values.daemonset.logzioFlushThreadCount | quote }}
        - name: LOGZIO_LOG_LEVEL
          value: {{ .Values.daemonset.logzioLogLevel | quote }}
        - name: FLUENTD_SYSTEMD_CONF
          value: {{ .Values.daemonset.fluentdSystemdConf | quote }}
        - name: INCLUDE_NAMESPACE
          value: {{ .Values.daemonset.includeNamespace | quote }}
        - name: KUBERNETES_VERIFY_SSL
          value: {{ .Values.daemonset.kubernetesVerifySsl | quote }}
        - name: AUDIT_LOG_FORMAT
          value: {{ .Values.daemonset.auditLogFormat }}
        - name: CRI
          value: {{ .Values.daemonset.cri | quote }}
        - name: EXCLUDE_PATH
          value: {{ include "logzio.excludePath" . | quote }}
        - name: CONTAINERS_PATH
          value: {{ .Values.daemonset.containersPath | quote }}
        - name: LOG_TYPE
          value: {{ .Values.daemonset.logType | quote }}
        - name: POS_FILE_PATH
          value: {{ .Values.daemonset.posFile | quote }}
        {{- if .Values.env_id }}
        - name: ENV_ID
          value: {{ .Values.env_id | quote }}
        {{- end }}
        {{- if .Values.daemonset.extraEnv }}
{{ toYaml .Values.daemonset.extraEnv | indent 8 }}
        {{- end }}
        resources: {{ toYaml ( .Values.daemonset.resources ) | nindent 10 }}
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: config-volume
          mountPath: /config-volume
        - name: fluentdconf
          mountPath: /fluentd/etc
        {{- if .Values.daemonset.extraVolumeMounts }}
{{ toYaml .Values.daemonset.extraVolumeMounts | indent 8 }}
        {{- end }}
      terminationGracePeriodSeconds: {{ .Values.daemonset.terminationGracePeriodSeconds }}
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config-volume
{{- if .Values.daemonset.fluentdPrometheusConf }}
        projected:
          sources:
          - configMap:
              name: {{ include "fluentd.fullname" . }}
          - configMap:
              name: {{ include "fluentd.fullname" . }}-monitoring
{{- else }}
        configMap:
          name: {{ include "fluentd.fullname" . }}
{{- end }}
      - name: fluentdconf
        emptyDir: {}
      {{- if .Values.daemonset.extraVolumes }}
{{ toYaml .Values.daemonset.extraVolumes | indent 6 }}
      {{- end }}
  {{- if .Values.daemonset.updateStrategy }}
  updateStrategy: {{ toYaml .Values.daemonset.updateStrategy | nindent 4 }}
  {{- end }}

{{- if .Values.windowsDaemonset.enabled }}
---
apiVersion: {{ .Values.apiVersions.daemonset }}
kind: DaemonSet
metadata:
  name: {{ include "fluentd.fullname" . }}-windows
  namespace: {{ .Release.namespace }}
  labels:
    k8s-app: {{ .Values.k8sApp }}
    version: v1
spec:
  selector:
    matchLabels:
      k8s-app: {{ .Values.k8sApp }}
  template:
    metadata:
      labels:
        k8s-app: {{ .Values.k8sApp }}
        version: v1
{{- if .Values.windowsDaemonset.fluentdPrometheusConf }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "24231"
{{- end}}
    spec:
      {{- if .Values.windowsDaemonset.priorityClassName }}
      priorityClassName: {{ .Values.windowsDaemonset.priorityClassName }}
      {{- end }}
      {{- if .Values.isRBAC }}
      serviceAccount: {{ template "fluentd.serviceAccount" . }}
      serviceAccountName: {{ template "fluentd.serviceAccount" . }}
      {{- end }}
      {{- if .Values.windowsDaemonset.tolerations }}
      tolerations:
{{ toYaml .Values.windowsDaemonset.tolerations | indent 6 }}
      {{- end }}
      {{- with .Values.windowsDaemonset.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      # Because the image's entrypoint requires to write on /fluentd/etc but we mount configmap there which is read-only,
      # this initContainers workaround or other is needed.
      # See https://github.com/fluent/fluentd-kubernetes-daemonset/issues/90
      containers:
      - name: fluentd-win
        image: "{{ .Values.windowsImage }}:{{ .Values.windowsImageTag }}"
{{- if .Values.windowsDaemonset.fluentdPrometheusConf }}
        ports:
        - name: metrics
          containerPort: 24231
          protocol: TCP
{{- end}}
        env:
        - name: LOGZIO_LOG_SHIPPING_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretName }}
              key: logzio-log-shipping-token
        - name: LOGZIO_LOG_LISTENER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretName }}
              key: logzio-log-listener
        - name: LOG_FILE_REFRESH_INTERVAL
          value: {{ .Values.windowsDaemonset.LogFileRefreshInterval | quote }}
        - name: LOGZIO_BUFFER_TYPE
          value: {{ .Values.windowsDaemonset.logzioBufferType | quote }}
        - name: LOGZIO_BUFFER_PATH
          value: {{ .Values.windowsDaemonset.logzioBufferPath | quote }}
        - name: LOGZIO_OVERFLOW_ACTION
          value: {{ .Values.windowsDaemonset.logzioOverflowAction | quote }}
        - name: LOGZIO_CHUNK_LIMIT_SIZE
          value: {{ .Values.windowsDaemonset.logzioChunkLimitSize | quote }}
        - name: LOGZIO_QUEUE_LIMIT_LENGTH
          value: {{ .Values.windowsDaemonset.logzioQueueLimitLength | quote }}
        - name: LOGZIO_FLUSH_INTERVAL
          value: {{ .Values.windowsDaemonset.logzioFlushInterval | quote }}
        - name: LOGZIO_RETRY_MAX_INTERVAL
          value: {{ .Values.windowsDaemonset.logzioRetryMaxInterval | quote }}
        - name: LOGZIO_RETRY_FOREVER
          value: {{ .Values.windowsDaemonset.logzioRetryForever | quote }}
        - name: LOGZIO_FLUSH_THREAD_COUNT
          value: {{ .Values.windowsDaemonset.logzioFlushThreadCount | quote }}
        - name: LOGZIO_LOG_LEVEL
          value: {{ .Values.windowsDaemonset.logzioLogLevel | quote }}
        - name: FLUENTD_SYSTEMD_CONF
          value: {{ .Values.windowsDaemonset.fluentdSystemdConf | quote }}
        - name: INCLUDE_NAMESPACE
          value: {{ .Values.windowsDaemonset.includeNamespace | quote }}
        - name: KUBERNETES_VERIFY_SSL
          value: {{ .Values.windowsDaemonset.kubernetesVerifySsl | quote }}
        - name: AUDIT_LOG_FORMAT
          value: {{ .Values.windowsDaemonset.auditLogFormat }}
        - name: CRI
          value: {{ .Values.windowsDaemonset.cri | quote }}
        - name: EXCLUDE_PATH
          value: {{ include "logzio.windowsExcludePath" . | quote }}
        - name: CONTAINERS_PATH
          value: {{ .Values.windowsDaemonset.containersPath | quote }}
        - name: POS_FILE_PATH
          value: {{ .Values.daemonset.posFile | quote }}
        {{- if .Values.env_id }}
        - name: ENV_ID
          value: {{ .Values.env_id | quote}}
        {{- end }}
        {{- if .Values.windowsDaemonset.extraEnv }}
{{ toYaml .Values.windowsDaemonset.extraEnv | indent 8 }}
        {{- end }}
        resources: {{ toYaml ( .Values.windowsDaemonset.resources ) | nindent 10 }}
        volumeMounts:
        - name: varlog
          mountPath: C:\var\log
        - name: varlibdockercontainers
          mountPath: C:\ProgramData\docker\containers
          readOnly: true
        - name: config-volume
          mountPath: C:\fluent\conf
        {{- if .Values.windowsDaemonset.extraVolumeMounts }}
{{ toYaml .Values.windowsDaemonset.extraVolumeMounts | indent 8 }}
        {{- end }}
      terminationGracePeriodSeconds: {{ .Values.windowsDaemonset.terminationGracePeriodSeconds }}
      volumes:
      - name: varlog
        hostPath:
          path: C:\var\log
      - name: varlibdockercontainers
        hostPath:
          path: C:\ProgramData\docker\containers
      - name: config-volume
{{- if .Values.windowsDaemonset.fluentdPrometheusConf }}
        projected:
          sources:
          - configMap:
              name: {{ include "fluentd.fullname" . }}
          - configMap:
              name: {{ include "fluentd.fullname" . }}-monitoring
{{- else }}
        configMap:
          name: {{ include "fluentd.fullname" . }}
{{- end}}
      {{- if .Values.windowsDaemonset.extraVolumes }}
{{ toYaml .Values.windowsDaemonset.extraVolumes | indent 6 }}
      {{- end }}
  {{- if .Values.windowsDaemonset.updateStrategy }}
  updateStrategy: {{ toYaml .Values.windowsDaemonset.updateStrategy | nindent 4 }}
  {{- end }}
{{- end }}
{{ end }}
