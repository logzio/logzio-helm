name: 'Test'

on: [pull_request]

env:
  TF_LOG: INFO

jobs:
  test:
    name: 'test-logzio-monitoring'
    runs-on: ubuntu-latest
    # Set the working directory to main for the config files
    defaults:
      run:
        shell: bash
        working-directory: ./tests/terraform/aks

steps:
  # Checkout the repository to the GitHub Actions runner
  - name: Checkout
    uses: actions/checkout@v2

  # Install the preferred version of Terraform CLI 
  - name: Setup Terraform
    uses: hashicorp/setup-terraform@v1
    with:
      terraform_version: 2.0.0

  - name: Terraform Init
    id: init
    run: terraform init

  - name: Terraform Plan
    id: plan
    env:
      TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_logzio_logs_shipping_token: ${{ secrets.LOGZIO_LOGS_TOKEN }}
      TF_VAR_logzio_listener: ${{ secrets.LOGZIO_LISTENER }}
      TF_VAR_win_user: ${{ secrets.WIN_USER }}
      TF_VAR_win_password: ${{ secrets.WIN_PASSWORD }}
      TF_VAR_logzio_metrics_shipping_token: ${{ secrets.LOGZIO_METRICS_TOKEN }}
      TF_VAR_logzio_metrics_listener: ${{ secrets.LOGZIO_METRICS_LISTENER }}
      TF_VAR_p8s_logzio_name: ${{ secrets.P8S_LOGZIO_NAME }}
      TF_VAR_logzio_traces_shipping_token: ${{ secrets.LOGZIO_TRACES_TOKEN }}
      TF_VAR_logzio_region: ${{ secrets.LOGZIO_REGION }}
      TF_VAR_jaeger_endpoint: ${{ secrets.JAEGER_ENDPOINT }}
    run: terraform plan -no-color
  - name: add-plan-comment
    id: comment
    uses: actions/github-script@v3
    env:
      PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
    with:
      github-token: ${{ secrets.GITHUB_TOKEN }}
      script: |
          const output = `#### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      
          <details><summary>Show Plan</summary>
          
          \`\`\`${process.env.PLAN}\`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
  - name: Terraform Apply
    id: apply
    run: terraform apply -auto-approve
  - name: Sleep for 15 minutes
    run: sleep 15m
    shell: bash
  - name: Install python
    uses: actions/setup-python@v2
    with:
      python-version: '3.9' # Version range or exact version of a Python version to use, using SemVer's version range syntax
  - name: Install requests python lib
    run: pip install requests
  - name: Run logs tests
    env:
      TEST_API_TOKEN: ${{ secrets.TEST_LOGS_API_TOKEN }}
    run: python tests-logs.py
    working-directory: ./tests
  - name: Terraform Destroy
    id: plan
    env:
      TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_logzio_logs_shipping_token: ${{ secrets.LOGZIO_LOGS_TOKEN }}
      TF_VAR_logzio_listener: ${{ secrets.LOGZIO_LISTENER }}
      TF_VAR_win_user: ${{ secrets.WIN_USER }}
      TF_VAR_win_password: ${{ secrets.WIN_PASSWORD }}
      TF_VAR_logzio_metrics_shipping_token: ${{ secrets.LOGZIO_METRICS_TOKEN }}
      TF_VAR_logzio_metrics_listener: ${{ secrets.LOGZIO_METRICS_LISTENER }}
      TF_VAR_p8s_logzio_name: ${{ secrets.P8S_LOGZIO_NAME }}
      TF_VAR_logzio_traces_shipping_token: ${{ secrets.LOGZIO_TRACES_TOKEN }}
      TF_VAR_logzio_region: ${{ secrets.LOGZIO_REGION }}
      TF_VAR_jaeger_endpoint: ${{ secrets.JAEGER_ENDPOINT }}
    run: terraform destroy -auto-approve
    