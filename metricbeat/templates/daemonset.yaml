---
# Deploy a Metricbeat instance per node for node metrics retrieval
apiVersion: {{ .Values.apiVersions.DaemonSet }}
kind: DaemonSet
metadata:
  name: metricbeat-new
  namespace: {{ .Values.namespace }}
  labels:
    k8s-app: metricbeat
spec:
  selector:
    matchLabels:
      k8s-app: metricbeat
  template:
    metadata:
      labels:
        k8s-app: metricbeat
    spec:
      serviceAccountName: {{ template "metricbeat.serviceAccount" . }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriod }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: "metricbeat"
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        args: [
          "-c", "/etc/metricbeat.yml",
          "-e",
          "-E",
          "-system.hostfs=/hostfs",
        ]
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: LOGZIO_METRICS_SHIPPING_TOKEN
          valueFrom:
            secretKeyRef:
              name: logzio-metrics-secret
              key: logzio-metrics-shipping-token
        - name: LOGZIO_METRICS_LISTENER_HOST
          valueFrom:
            secretKeyRef:
              name: logzio-metrics-secret
              key: logzio-metrics-listener-host
        - name: KUBE_STATE_METRICS_NAMESPACE
          valueFrom:
            secretKeyRef:
              name: cluster-details
              key: kube-state-metrics-namespace
        - name: KUBE_STATE_METRICS_PORT
          valueFrom:
            secretKeyRef:
              name: cluster-details
              key: kube-state-metrics-port
        - name: CLUSTER_NAME
          valueFrom:
            secretKeyRef:
              name: cluster-details
              key: cluster-name
        - name: SSL_VERIFICATION_MODE
          value: {{ .Values.daemonset.sslVerificationMode }}
        securityContext: {{ toYaml ( .Values.podSecurityContext | default .Values.daemonset.securityContext ) | nindent 10 }}
        resources: {{ toYaml ( .Values.resources | default .Values.daemonset.resources ) | nindent 10 }}
        volumeMounts:
        - name: metricbeat-config
          mountPath: /etc/metricbeat.yml
          readOnly: true
          subPath: metricbeat.yml
        {{- range .Values.secretMounts | default .Values.daemonset.secretMounts }}
        - name: {{ .name }}
          mountPath: "{{ .mountPath }}"
          readOnly: true
          {{- if .subPath }}
          subPath: {{ .subPath }}
          {{- end }}
        {{- end }}
        - name: dockersock
          mountPath: /var/run/docker.sock
        - name: proc
          mountPath: /hostfs/proc
          readOnly: true
        - name: cgroup
          mountPath: /hostfs/sys/fs/cgroup
          readOnly: true
        {{- if .Values.extraVolumeMounts | default .Values.daemonset.extraVolumeMounts }}
{{ toYaml ( .Values.extraVolumeMounts | default .Values.daemonset.extraVolumeMounts ) | indent 8 }}
        {{- end }}
      volumes:
      {{- range .Values.secretMounts | default .Values.daemonset.secretMounts }}
      - name: {{ .name }}
        configMap:
          defaultMode: 0600
          name: {{ .secretName }}
      {{- end }}
      - name: metricbeat-config
        configMap:
          defaultMode: 0600
          name: {{ template "metricbeat.fullname" . }}-config
      - name: proc
        hostPath:
          path: /proc
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: data
        hostPath:
          path: {{ .Values.hostPathRoot }}/{{ template "metricbeat.fullname" . }}-{{ .Release.Namespace }}-data
          type: DirectoryOrCreate
      {{- if .Values.daemonset.extraVolumes }}
{{ toYaml .Values.daemonset.extraVolumes | indent 6 }}
      {{- end }}
