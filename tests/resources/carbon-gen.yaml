apiVersion: apps/v1
kind: Deployment
metadata:
  name: carbon-gen
  labels:
    app: carbon-gen
spec:
  replicas: 1
  selector:
    matchLabels:
      app: carbon-gen
  template:
    metadata:
      labels:
        app: carbon-gen
    spec:
      initContainers:
        - name: wait-for-collector
          image: busybox:1.36
          command: ["/bin/sh"]
          args:
            - -c
            - |
              RELEASE_NAME=${RELEASE_NAME:-logzio-k8s-telemetry}
              NAMESPACE=${NAMESPACE:-default}
              COLLECTOR_HOST="${RELEASE_NAME}-otel-collector.${NAMESPACE}.svc.cluster.local"
              echo "Waiting for collector to be ready..."
              until nc -z $COLLECTOR_HOST 2003; do
                echo "Collector not ready, waiting 5 seconds..."
                sleep 5
              done
              echo "Collector is ready!"
      containers:
        - name: carbon-gen
          image: busybox:1.36
          command: ["/bin/sh"]
          args:
            - -c
            - |
              ENV_ID=${ENV_ID:-default-env}
              RELEASE_NAME=${RELEASE_NAME:-logzio-k8s-telemetry}
              NAMESPACE=${NAMESPACE:-default}
              COLLECTOR_HOST="${RELEASE_NAME}-otel-collector.${NAMESPACE}.svc.cluster.local"
              
              # Send Carbon metrics continuously
              while true; do
                echo "Sending Carbon metric with env_id: $ENV_ID to $COLLECTOR_HOST"
                TIMESTAMP=$(date +%s)
                echo "test.carbon.metric;env_id=$ENV_ID;source=e2e-test 1 $TIMESTAMP" | nc -w 1 $COLLECTOR_HOST 2003
                echo "Carbon metric sent successfully"
                
                # Wait 30 seconds before sending the next metric
                sleep 30
              done
          env:
            - name: ENV_ID
              value: "${ENV_ID}"
            - name: RELEASE_NAME
              value: "logzio-k8s-telemetry"
            - name: NAMESPACE
              value: "default" 